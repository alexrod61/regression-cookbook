<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7PRVEBE1EF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7PRVEBE1EF');
</script>

# The Sugartastic Regression Mind Map {#sec-regression-mind-map}

```{r}
#| include: false

colourize <- function(x, color) {
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{%s}", color, x)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'>%s</span>", color,
      x)
  } else x
}
```

::: {.Warning}
::::{.Warning-header}
Fun fact!
::::
::::{.Warning-container}
**Sugartastic!** So sweet, it could power a carnivalâ€™s worth of cotton candy machines.
::::
:::

The regression mind map is a key component of the philosophy behind this book, besides the **data science workflow** from @sec-ds-workflow and the **ML-Stats dictionary** found in @sec-dictionary. @fig-app-regression shows this regression mind map split in two zones by colour: `r colourize("discrete", "blue")` and `r colourize("continuous", "blue")`. This regression mind map is handy when executing the **data modelling** stage from the data science workflow, as explained in @sec-ds-workflow-modelling. Recall the first step in this stage is to **choose a suitable regression model**, and we made this decision in the function of the type of `r colourize("outcome", "magenta")` $Y$ we are dealing with. That said, the **distributional mind map** from @fig-app-distributions complements the regression mind map when identifying the correct type of `r colourize("outcome", "magenta")` $Y$.

::: {#fig-app-regression}
```{mermaid}
mindmap
  root((Regression 
  Analysis)
    Continuous <br/>Outcome Y
      {{Unbounded <br/>Outcome Y}}
        )Chapter 3: <br/>Ordinary <br/>Least Squares <br/>Regression(
          (Normal <br/>Outcome Y)
      {{Nonnegative <br/>Outcome Y}}
        )Chapter 4: <br/>Gamma Regression(
          (Gamma <br/>Outcome Y)
      {{Bounded <br/>Outcome Y <br/> between 0 and 1}}
        )Chapter 5: Beta <br/>Regression(
          (Beta <br/>Outcome Y)
      {{Nonnegative <br/>Survival <br/>Time Y}}
        )Chapter 6: <br/>Parametric <br/> Survival <br/>Regression(
          (Exponential <br/>Outcome Y)
          (Weibull <br/>Outcome Y)
          (Lognormal <br/>Outcome Y)
        )Chapter 7: <br/>Semiparametric <br/>Survival <br/>Regression(
          (Cox Proportional <br/>Hazards Model)
            (Hazard Function <br/>Outcome Y)
    Discrete <br/>Outcome Y
      {{Binary <br/>Outcome Y}}
        {{Ungrouped <br/>Data}}
          )Chapter 8: <br/>Binary Logistic <br/>Regression(
            (Bernoulli <br/>Outcome Y)
        {{Grouped <br/>Data}}
          )Chapter 9: <br/>Binomial Logistic <br/>Regression(
            (Binomial <br/>Outcome Y)
      {{Count <br/>Outcome Y}}
        {{Equidispersed <br/>Data}}
          )Chapter 10: <br/>Classical Poisson <br/>Regression(
            (Poisson <br/>Outcome Y)
        {{Overdispersed <br/>Data}}
          )Chapter 11: <br/>Negative Binomial <br/>Regression(
            (Negative Binomial <br/>Outcome Y)
        {{Overdispersed or <br/>Underdispersed <br/>Data}}
          )Chapter 13: <br/>Generalized <br/>Poisson <br/>Regression(
            (Generalized <br/>Poisson <br/>Outcome Y)
        {{Zero Inflated <br/>Data}}
          )Chapter 12: <br/>Zero Inflated <br/>Poisson <br/>Regression(
            (Zero Inflated <br/>Poisson <br/>Outcome Y)
      {{Categorical <br/>Outcome Y}}
        {{Nominal <br/>Outcome Y}}
          )Chapter 14: <br/>Multinomial <br/>Logistic <br/>Regression(
            (Multinomial <br/>Outcome Y)
        {{Ordinal <br/>Outcome Y}}
          )Chapter 15: <br/>Ordinal <br/>Logistic <br/>Regression(
            (Logistic <br/>Distributed <br/>Cumulative Outcome <br/>Probability)
```

Regression analysis mind map depicting all modelling techniques to be explored in this book. Depending on the type of outcome $Y$, these techniques are split into two large zones: *discrete* and *continuous*.
:::

Suppose we start reading this regression map clockwise in the `r colourize("continuous", "blue")` zone. In that case, note this zone starts the cloud corresponding to @sec-ols on the classical regression model called **Ordinary Least-squares (OLS)**. Moreover, we can see that OLS is meant for an unbounded `r colourize("outcome", "magenta")` $Y \in (-\infty, \infty)$. Then, we can proceed to the distributional assumption on $Y$ in OLS, which would be Normal. Following up with the cloud corresponding to @sec-gamma on **Gamma regression**, we can see this model is meant for a nonnegative `r colourize("outcome", "magenta")` $Y \in [0, \infty)$ where we assume a Gamma distribution for $Y$. This way of reading the `r colourize("continuous", "blue")` zone in the mind map will persist until the **survival analysis** models: @sec-parametric-survival and @sec-semiparametric-survival.

Then, we can proceed to the `r colourize("discrete", "blue")` zone with the cloud corresponding to @sec-binary-logistic on the `r colourize("generalized linear model (GLM)", "blue")` called **Binary Logistic regression** which aims to model a binary `r colourize("outcome", "magenta")` $Y \in \{0, 1 \}$. Note that the Binary Logistic regression model is meant for **ungrouped data** where each row in the `r colourize("training dataset", "magenta")` contains unique `r colourize("feature", "magenta")` values. Hence, in this modelling case, we assume the `r colourize("outcome", "magenta")` $Y$ as a Bernoulli trial where $1$ indicates a **success** and $0$ indicates a **failure**. Then, suppose we take another clockwise case such as @sec-classical-poisson on the `r colourize("GLM", "blue")` **Classical Poisson regression**, this model is suitable for count-type `r colourize("outcomes", "magenta")` where `r colourize("equidispersion", "blue")` is present (i.e., the `r colourize("mean", "blue")` of the counts is equal to its corresponding `r colourize("variance", "blue")`). Finally, this model assumes that the `r colourize("outcome", "magenta")` is Poisson-distributed. This way of reading the `r colourize("discrete", "blue")` zone in the mind map will persist until @sec-ordinal-logistic on **Ordinal Logistic Regression**.
